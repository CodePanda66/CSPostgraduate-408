(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{661:function(t,s,a){"use strict";a.r(s);var i=a(4),l=Object(i.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1、处理器的三级调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、处理器的三级调度"}},[t._v("#")]),t._v(" 1、处理器的三级调度")]),t._v(" "),a("h3",{attrs:{id:"_1-1、处理器的三级调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、处理器的三级调度"}},[t._v("#")]),t._v(" 1.1、处理器的三级调度")]),t._v(" "),a("p",[t._v("在多道程序环境下，一个作业从提交到执行，通常都要经历多级调度，如高级调度，中级调度和低级调度。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://picbed.kimyang.cn/202108112225194.jpg",alt:""}})]),t._v(" "),a("ol",[a("li",[a("p",[t._v("高级调度（作业调度、宏观调度、长程调度）")]),t._v(" "),a("p",[t._v("按照一定的原则，从外存上处于后备状态的作业中，选择一个或者多个，给他们分配内存输入输出设备的必要资源，并建立相应的进程。以使该作业具有获得竞争处理器的权利。调用频率较低。\n作业调度每次要接纳多少个作业进入内存取决于多道程序的并发程度。应该选择哪些作业从外存调入内存取决于所才取得调度算法（先来先服务调度算法等。）。")])]),t._v(" "),a("li",[a("p",[t._v("中级调度（中程调度、交换调度）")]),t._v(" "),a("p",[t._v("按照给定的原则和策略，将处于外存对换区中具备运行条件的进程调入内存，并将其状态修改为就绪状态，挂在就绪队列上等待，或者将处于内存中的暂时不能运行的进程交换到外层对换区，此时进程状态称为挂起状态。")]),t._v(" "),a("p",[t._v("中级调度主要涉及内存管理和扩充")])]),t._v(" "),a("li",[a("p",[t._v("低级调度（进程调度、微观调度、短程调度）")]),t._v(" "),a("p",[t._v("按照某种策略和方法，从就绪队列中选取一个进程，将处理器分配给它。")]),t._v(" "),a("p",[t._v("进程调度的运行频率很高，一般几十毫秒就要运行一次。")])])]),t._v(" "),a("p",[t._v("作业调度与进程调度的区别：")]),t._v(" "),a("ul",[a("li",[t._v("作业调度的结果是为作业创建进程，而进程调度的结果是进程被执行。")]),t._v(" "),a("li",[t._v("作业调度频率小，进程调度频率高。")]),t._v(" "),a("li",[t._v("在某些系统中，可以没有作业调度，但进程调度必须有。")])]),t._v(" "),a("h2",{attrs:{id:"_2、调度的基本原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、调度的基本原则"}},[t._v("#")]),t._v(" 2、调度的基本原则")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("CPU 利用率（越高越好）")])]),t._v(" "),a("li",[a("p",[t._v("系统吞吐量")]),t._v(" "),a("p",[t._v("系统吞吐量表示单位时间内cpu完成作业的数量。长作业占用 CPU 时间长会导致系统吞吐量下降。")])]),t._v(" "),a("li",[a("p",[t._v("响应时间")]),t._v(" "),a("p",[t._v("从用户角度看，调度策略要保证尽量短的响应时间，使响应时间在用户的接受范围内。")])]),t._v(" "),a("li",[a("p",[t._v("周转时间")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("周转时间")]),t._v(" "),a("p",[t._v("周转时间是指作业从提交到完成的时间间隔")]),t._v(" "),a("p",[t._v("作业周转时间=作业完成时间-作业提交时间")])]),t._v(" "),a("li",[a("p",[t._v("平均周转时间")]),t._v(" "),a("p",[t._v("是指n个作业周转时间的平均值。"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("T")]),a("mo",[t._v("=")]),a("mo",{attrs:{stretchy:"false"}},[t._v("(")]),a("msub",[a("mi",[t._v("T")]),a("mn",[t._v("1")])],1),a("mo",[t._v("+")]),a("msub",[a("mi",[t._v("T")]),a("mn",[t._v("2")])],1),a("mo",[t._v("+")]),a("mo",[t._v("⋯")]),a("mo",[t._v("+")]),a("msub",[a("mi",[t._v("T")]),a("mi",[t._v("n")])],1),a("mo",{attrs:{stretchy:"false"}},[t._v(")")]),a("mi",{attrs:{mathvariant:"normal"}},[t._v("/")]),a("mi",[t._v("n")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("T=(T_1+T_2+\\cdots+T_n)/n")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[t._v("=")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mopen"},[t._v("(")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.30110799999999993em"}},[a("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.13889em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("1")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[t._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.30110799999999993em"}},[a("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.13889em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[t._v("2")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[t._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.66666em","vertical-align":"-0.08333em"}}),a("span",{staticClass:"minner"},[t._v("⋯")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}}),a("span",{staticClass:"mbin"},[t._v("+")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2222222222222222em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.151392em"}},[a("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.13889em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("n")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mclose"},[t._v(")")]),a("span",{staticClass:"mord"},[t._v("/")]),a("span",{staticClass:"mord mathnormal"},[t._v("n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("带权周转时间")]),t._v(" "),a("p",[t._v("作业周转时间与运行时间的比。"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("msub",[a("mi",[t._v("W")]),a("mi",[t._v("i")])],1),a("mo",[t._v("=")]),a("msub",[a("mi",[t._v("T")]),a("mi",[t._v("i")])],1),a("mi",{attrs:{mathvariant:"normal"}},[t._v("/")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("W_i=T_i/")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[t._v("W")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.31166399999999994em"}},[a("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.13889em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("i")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[t._v("=")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t vlist-t2"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.31166399999999994em"}},[a("span",{staticStyle:{top:"-2.5500000000000003em","margin-left":"-0.13889em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mathnormal mtight"},[t._v("i")])])])]),a("span",{staticClass:"vlist-s"},[t._v("​")])]),a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.15em"}},[a("span")])])])])]),a("span",{staticClass:"mord"},[t._v("/")])])])]),t._v("作业 i 的运行时间")])]),t._v(" "),a("li",[a("p",[t._v("平均带权周转时间")]),t._v(" "),a("p",[t._v("n 个作业的带权周转时间的平均值")])])])])]),t._v(" "),a("h2",{attrs:{id:"_3、进程调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、进程调度"}},[t._v("#")]),t._v(" 3、进程调度")]),t._v(" "),a("h3",{attrs:{id:"_3-1、进程调度的功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、进程调度的功能"}},[t._v("#")]),t._v(" 3.1、进程调度的功能")]),t._v(" "),a("ul",[a("li",[t._v("记录系统中所有进程的有关情况及状态特征。")]),t._v(" "),a("li",[t._v("选择获得处理器的进程。")]),t._v(" "),a("li",[t._v("处理器分配。")])]),t._v(" "),a("h3",{attrs:{id:"_3-2、引起进程调度的原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、引起进程调度的原因"}},[t._v("#")]),t._v(" 3.2、引起进程调度的原因")]),t._v(" "),a("ul",[a("li",[t._v("当前运行进程运行结束。因任务完成而正常结束，或者因为出现错误而异常结束。")]),t._v(" "),a("li",[t._v("当前运行进程因某种原因，比如 io 请求、P 操作，阻塞原语等，从运行状态进入阻塞状态。")]),t._v(" "),a("li",[t._v("执行完系统调用的系统程序后，返回用户进程，这时可看做系统进程执行完毕，从而可以调度一个新的用户进程。")]),t._v(" "),a("li",[t._v("在采用抢占调度方式的系统中，一个具有更高优先级的进程要求使用处理器，则使当前运行进程进入就绪队列。(与调度方式有关)")]),t._v(" "),a("li",[t._v("在分时系统中分配给该进程的时间片已用完。（与操作系统类型有关）")])]),t._v(" "),a("h2",{attrs:{id:"_3-3、不能进行进程调度的情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、不能进行进程调度的情况"}},[t._v("#")]),t._v(" 3.3、不能进行进程调度的情况")]),t._v(" "),a("ul",[a("li",[t._v("处理中断的过程。")]),t._v(" "),a("li",[t._v("在操作系统内核程序临界区中。")]),t._v(" "),a("li",[t._v("其他需要完全屏蔽中断的原子操作过程。")])]),t._v(" "),a("h3",{attrs:{id:"_3-4、进程调度的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、进程调度的方式"}},[t._v("#")]),t._v(" 3.4、进程调度的方式")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("抢占方式")]),t._v("（可剥夺方式）：当一个进程正在处理器上执行时，若有某个优先级更高的进程进入就绪队列，则立即暂停正在执行的进程，将处理器分配给新进程")]),t._v(" "),a("li",[a("strong",[t._v("非抢占方式")]),t._v("（不可剥夺方式）：当某一个进程正在处理器上执行时，即使有某个优先级更高的进程进入就绪队列，仍然让正在执行的进程继续执行，直到该进程完成或因发生某种事件而进入完成或阻塞状态时，才将处理器分配给新进程。")])]),t._v(" "),a("h2",{attrs:{id:"_4、常见调度算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、常见调度算法"}},[t._v("#")]),t._v(" 4、常见调度算法")]),t._v(" "),a("h3",{attrs:{id:"_4-1、先来先服务调度算法-作业调度、进程调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、先来先服务调度算法-作业调度、进程调度"}},[t._v("#")]),t._v(" 4.1、先来先服务调度算法（作业调度、进程调度）")]),t._v(" "),a("p",[t._v("按照进程进入就绪队列的先后次序来分配处理器。有利于长进程，不利于短进程。非抢占式。")]),t._v(" "),a("h3",{attrs:{id:"_4-2、短作业优先调度算法-作业调度、进程调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、短作业优先调度算法-作业调度、进程调度"}},[t._v("#")]),t._v(" 4.2、短作业优先调度算法（作业调度、进程调度）")]),t._v(" "),a("p",[t._v("把处理器分配给最快完成的作业（进程）。对长进程不利，会产生"),a("strong",[t._v("饥饿现象")]),t._v("。")]),t._v(" "),a("p",[t._v("饥饿现象是指在一段时间内，进程得不到调度执行，或得不到所需资源。")]),t._v(" "),a("h3",{attrs:{id:"_4-3、优先级调度算法-作业调度、进程调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3、优先级调度算法-作业调度、进程调度"}},[t._v("#")]),t._v(" 4.3、优先级调度算法（作业调度、进程调度）")]),t._v(" "),a("p",[t._v("把处理器分配给优先级最高的进程。")]),t._v(" "),a("p",[t._v("进程的优先级用于表示进程的重要性及运行的优先性。进程优先级通常分为两种：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("静态优先级")]),t._v("：")]),t._v(" "),a("p",[t._v("在创建进程时确定的，确定之后，在整个进程运行期间不再改变。确定静态优先级的依据有：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("按进程类确定")]),t._v("：通常系统中有两类进程，系统进程和用户进程。系统中各进程的运行速度以及自系统资源的利用率，在很大程度上依赖于系统进程。所以系统进程的优先级应高于用户进程。")]),t._v(" "),a("li",[a("strong",[t._v("按作业资源要求确定")]),t._v("：进程所申请的资源越多，估计的运行时间越长，进程的优先级越低。")]),t._v(" "),a("li",[a("strong",[t._v("按用户类型和要求确定")]),t._v("。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("动态优先级")]),t._v("：")]),t._v(" "),a("p",[t._v("在创建进程时，根据进程的特点以及相关情况确定一个优先级，在进程运行过程中，再根据情况的变化调整优先级。确定动态优先级的依据有以下几种：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("根据进程占用cpu时间的长短来决定")]),t._v("。一个进程占用cpu时间越长，则优先级越低，再次获得调度的可能性越小。一个进程占用cpu时间越短，则优先级越高，再次获得调度的可能性越大。")]),t._v(" "),a("li",[t._v("根据就绪进程等待cpu时间的长短来决定。一个就绪进程在就绪队列中等待的时间越长，则优先级越高，获得调度的可能性越大。反之一个就绪进程在就绪队列中等待的时间越短，则优先级越低，获得调度的可能性越小。")])])])]),t._v(" "),a("p",[t._v("基于优先级的调度算法还可以按调度方式的不同分为"),a("strong",[t._v("非抢占优先级调度算法和抢占优先级调度算法")]),t._v("，参考前面"),a("a",{attrs:{href:"#_3-4%E3%80%81%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%9A%84%E6%96%B9%E5%BC%8F"}},[t._v("进程调度的方式")]),t._v("。")]),t._v(" "),a("p",[t._v("在优先级相同的情况下，通常按照先来先服务或短作业优先的顺序执行。")]),t._v(" "),a("h3",{attrs:{id:"_4-4、时间片轮转调度算法-进程调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4、时间片轮转调度算法-进程调度"}},[t._v("#")]),t._v(" 4.4、时间片轮转调度算法 （进程调度）")]),t._v(" "),a("p",[t._v("在分时系统中，进程调度通常采用时间片轮转调度方法。系统将所有就绪进程按到达时间的先后次序排成一个队列。进程调度程序总是选择队列中第一个进程执行，并规定执行一段时间，称为时间片。当该进程用完这一时间片时，即使进程并未执行结束，系统都将其送至就绪队列队尾。再把处理器分配给下一个就绪进程执行。这样，处于就绪队列中的进程可以依次轮流获得一个时间片的处理时间，然后重新回到队列尾部等待执行，如此不断循环，直至完成。")]),t._v(" "),a("p",[t._v("影响时间片大小的因素：")]),t._v(" "),a("ul",[a("li",[t._v("系统的响应时间: "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mi",[t._v("T")]),a("mo",[t._v("=")]),a("mi",[t._v("N")]),a("mi",[t._v("q")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("T=Nq")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.68333em","vertical-align":"0em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.13889em"}},[t._v("T")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}}),a("span",{staticClass:"mrel"},[t._v("=")]),a("span",{staticClass:"mspace",staticStyle:{"margin-right":"0.2777777777777778em"}})]),a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8777699999999999em","vertical-align":"-0.19444em"}}),a("span",{staticClass:"mord mathnormal",staticStyle:{"margin-right":"0.03588em"}},[t._v("Nq")])])])]),t._v(",其中 T 为系统响应时间,q为时间片大小，N 为就绪队列中的进程数。")]),t._v(" "),a("li",[t._v("就绪队列中的进程数。")]),t._v(" "),a("li",[t._v("系统处理能力。")])]),t._v(" "),a("h3",{attrs:{id:"_4-5、高响应比优先调度算法-作业调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5、高响应比优先调度算法-作业调度"}},[t._v("#")]),t._v(" 4.5、高响应比优先调度算法（作业调度）")]),t._v(" "),a("p",[t._v("每次进行作业调度时，先计算就绪队列中每个作业的响应比，选择响应比最高的作业执行。响应比计算公式为：")]),t._v(" "),a("p",[t._v("响应比=作业响应时间/估计运行时间=(作业等待时间+估计运行时间)/估计运行时间")]),t._v(" "),a("p",[t._v("高响应比优先调度算法考虑了作业的等待时间和作业运行时间两个因素，综合了先来先服务和短作业优先两种调度算法的特点。但由于要计算每个后备作业的响应比，因此增加了系统开销。")]),t._v(" "),a("h3",{attrs:{id:"_4-6、多级队列调度算法-进程调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-6、多级队列调度算法-进程调度"}},[t._v("#")]),t._v(" 4.6、多级队列调度算法（进程调度）")]),t._v(" "),a("p",[t._v("根据进程的性质或类型，将就绪队列划分为若干个独立的队列，每个进程固定地分属一个队列，每个队列采用一种调度算，不同的队列可以采用不同的调度算法。")]),t._v(" "),a("h3",{attrs:{id:"_4-7、多级反馈队列调度算法-进程调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-7、多级反馈队列调度算法-进程调度"}},[t._v("#")]),t._v(" 4.7、多级反馈队列调度算法（进程调度）")]),t._v(" "),a("img",{staticStyle:{zoom:"200%"},attrs:{src:"https://picbed.kimyang.cn/202108120223602.png",alt:"下载"}}),t._v(" "),a("p",[t._v("首先，应设置多个就绪队列，并为每个队列赋予不同的优先级，第一个队列的优先级最高地。其余队列的优先级逐次降低。")]),t._v(" "),a("p",[t._v("其次，每个队列中的进程，执行时间，片的大小也各不相同。进程所在队列的优先级越高，其相应的时间片越短。")]),t._v(" "),a("p",[t._v("再次，当一个新进程进入系统时，应先将其放入第一个队列末尾按"),a("strong",[t._v("先来先服务原则")]),t._v("，等待调度。当轮到该进程执行时，如能在此时间片完成，便可撤销进程。如果在一个时间片结束，尚未完成调度程序，便将该进程转入第二个队列的末尾。再同样按照先来先服务原则，等待调度执行。如此下去，最后一个队列中使用"),a("strong",[t._v("时间片轮转调度算法")]),t._v("。")]),t._v(" "),a("p",[t._v("多级反馈队列调度算法是时间片轮转调度算法和优先级调度算法的综合与发展。通过动态调节进程优先级和时间片的大小，多级反馈队列调度算法可兼顾多方面的系统目标。如：")]),t._v(" "),a("ul",[a("li",[t._v("为提高系统吞吐量和缩短平均周转时间而照顾短进程。")]),t._v(" "),a("li",[t._v("为获得较好的IO设备利用率和缩短响应时间而照顾IO型进程。")]),t._v(" "),a("li",[t._v("不必事先估计进程的执行时间。")])])])}),[],!1,null,null,null);s.default=l.exports}}]);